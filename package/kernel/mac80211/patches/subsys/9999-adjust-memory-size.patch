--- a/include/net/fq_impl.h
+++ b/include/net/fq_impl.h
@@ -355,8 +355,8 @@ static int fq_init(struct fq *fq, int fl
 	INIT_LIST_HEAD(&fq->tin_backlog);
 	fq->flows_cnt = max_t(u32, flows_cnt, 1);
 	fq->quantum = 300;
-	fq->limit = 8192;
-	fq->memory_limit = 16 << 20; /* 16 MBytes */
+	fq->limit = 16384;
+	fq->memory_limit = 64 << 20; /* 64 MBytes */
 
 	fq->flows = kvcalloc(fq->flows_cnt, sizeof(fq->flows[0]), GFP_KERNEL);
 	if (!fq->flows)
--- a/net/mac80211/tx.c
+++ b/net/mac80211/tx.c
@@ -1585,11 +1585,11 @@ int ieee80211_txq_setup_flows(struct iee
 	bool supp_vht = false;
 	enum nl80211_band band;
 
-	ret = fq_init(fq, 4096);
+	ret = fq_init(fq, 8192);
 	if (ret)
 		return ret;
 
-	/*
+	/* Adjust for MT6000
 	 * If the hardware doesn't support VHT, it is safe to limit the maximum
 	 * queue size. 4 Mbytes is 64 max-size aggregates in 802.11n.
 	 */
@@ -1604,7 +1604,7 @@ int ieee80211_txq_setup_flows(struct iee
 	}
 
 	if (!supp_vht)
-		fq->memory_limit = 4 << 20; /* 4 Mbytes */
+		fq->memory_limit = 16 << 20; /* 16 Mbytes */
 
 	codel_params_init(&local->cparams);
 	local->cparams.interval = MS2TIME(80);
